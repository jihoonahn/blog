---
import Layout from "@layouts/Layout.astro";
import type { MetaData } from "~/types";

const metadata: MetaData = {
  title: "404 - 페이지를 찾을 수 없습니다",
  description:
    "요청하신 페이지를 찾을 수 없습니다. 홈페이지로 돌아가시거나 다른 페이지를 확인해보세요.",
};
---

<Layout metadata={metadata}>
  <div class="max-w-6xl mx-auto px-4">
    <div class="min-h-screen flex items-center justify-center">
      <div class="card max-w-md mx-auto text-center">
        <h1 class="text-4xl font-bold mb-4">404</h1>
        <h2 class="text-2xl font-semibold mb-4">페이지를 찾을 수 없습니다</h2>
        <p class="text-secondary mb-6">
          요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다.
        </p>
        <div class="space-y-4">
          <a href="/" class="btn btn-primary block">🏠 홈으로 돌아가기</a>
          <button onclick="history.back()" class="btn block"
            >← 이전 페이지</button
          >
        </div>

        <!-- 테마 테스트 섹션 -->
        <div class="mt-8 p-4 border border-primary rounded-lg">
          <h3 class="font-semibold mb-2">테마 테스트</h3>
          <p class="text-sm text-tertiary mb-2">
            현재 테마: <span id="current-theme">로딩 중...</span>
          </p>
          <button id="test-theme-toggle" class="btn btn-primary text-sm"
            >테마 토글 테스트</button
          >
        </div>
      </div>
    </div>
  </div>

  <script>
    // 테마 상태 표시
    function updateThemeDisplay() {
      const currentTheme =
        document.documentElement.getAttribute("data-theme") || "light";
      const themeDisplay = document.getElementById("current-theme");
      if (themeDisplay) {
        themeDisplay.textContent = currentTheme;
        themeDisplay.className =
          currentTheme === "dark" ? "text-blue-400" : "text-blue-600";
      }
    }

    // 테스트 버튼 이벤트
    document.addEventListener("DOMContentLoaded", function () {
      updateThemeDisplay();

      const testButton = document.getElementById("test-theme-toggle");
      if (testButton) {
        testButton.addEventListener("click", function () {
          const currentTheme =
            document.documentElement.getAttribute("data-theme") || "light";
          const newTheme = currentTheme === "light" ? "dark" : "light";

          document.documentElement.setAttribute("data-theme", newTheme);
          localStorage.setItem("theme", newTheme);
          updateThemeDisplay();

          console.log("Theme changed to:", newTheme);
        });
      }

      // 테마 변경 이벤트 리스너
      window.addEventListener("themeChanged", function (e) {
        updateThemeDisplay();
        console.log("Theme changed event received:", e.detail);
      });
    });
  </script>
</Layout>
